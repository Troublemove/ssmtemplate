<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
    
    <!-- shiro的核心配置:  配置shiroFileter id名必须与web.xml中的filtername保持一致 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 装配 securityManager -->
        <property name="securityManager" ref="securityManager" />
        <!-- 配置登陆页面 -->
        <property name="loginUrl" value="/index" />
        <!-- 登陆成功后的页面,可以不配置，直接通过代码进行处理 -->
        <property name="successUrl" value="/mainJsp" />
        <!-- 登录的用户访问了没有被授权的资源自动跳转到的页面 -->
        <!-- <property name="unauthorizedUrl" value="/user/unauthorized" /> -->
        
        <!-- 具体配置需要拦截哪些 URL, 以及访问对应的 URL 时使用 Shiro 的什么 Filter 进行拦截. -->
        <!-- 从上到下，从左到右
        	anno: 任何人都可以访问
        	authc：必须是登录之后才能进行访问，不包括remember me
        	user：登录用户才可以访问，包含remember me
        	perms：指定过滤规则，这个一般是扩展使用，不会使用原生的
         -->
        <property name="filterChainDefinitions">
            <value>
            	/js/** = anon
            	/css/** = anon
            	/fonts/** = anon
            	/img/** = anon
                /index = anon
                /tologin = anon
                /api-docs = anon
                /logout = logout
                /* = authc
            </value>
        </property>
    </bean>

    <!-- 配置缓存管理器 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <!-- 指定 ehcache 的配置文件 -->
        <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml" />
    </bean>
    <!-- 配置进行授权和认证的 Realm -->
    <bean id="myRealm" class="cn.zt.shiro.MyRealm"></bean>
    <!-- 配置 Shiro 的 SecurityManager Bean. -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="cacheManager" ref="cacheManager" />
        <property name="realm" ref="myRealm" />
    </bean>
    <!-- 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>
</beans>